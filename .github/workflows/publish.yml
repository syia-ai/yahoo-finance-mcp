name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.1.1)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Update version if manual trigger
      if: github.event_name == 'workflow_dispatch'
      run: |
        # Update version in pyproject.toml
        sed -i 's/version = "[^"]*"/version = "${{ github.event.inputs.version }}"/' pyproject.toml

    - name: Install build dependencies
      run: |
        uv add --dev build twine

    - name: Clean previous builds
      run: |
        echo "üßπ Cleaning previous builds..."
        rm -rf dist/
        find . -type d -name "*.egg-info" -exec rm -rf {} + 2>/dev/null || true
        find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true

    - name: Build package
      run: |
        echo "üî® Building package..."
        uv run python -m build
        echo "üì¶ Build artifacts:"
        ls -la dist/

    - name: Check package
      run: |
        echo "‚úÖ Checking package quality..."
        uv run twine check dist/*

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        TWINE_REPOSITORY_URL: https://upload.pypi.org/legacy/
      run: |
        echo "üöÄ Publishing to PyPI..."
        uv run twine upload --repository-url $TWINE_REPOSITORY_URL dist/*

    - name: Verify publication
      run: |
        echo "‚è≥ Verifying publication..."
        sleep 10
        
        # Get package name from pyproject.toml
        pkg_name=$(grep '^name = ' pyproject.toml | sed 's/name = "\(.*\)"/\1/')
        pkg_version=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
        
        echo "‚úÖ Package $pkg_name v$pkg_version successfully published!"
        echo "üåê Available at: https://pypi.org/project/$pkg_name/$pkg_version/"